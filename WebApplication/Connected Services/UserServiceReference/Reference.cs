//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    public partial class User : object
    {
        
        private string EmailField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private int UserIdField;
        
        private System.Collections.Generic.List<UserServiceReference.UserSubscription> UserSubscriptionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<UserServiceReference.UserSubscription> UserSubscriptions
        {
            get
            {
                return this.UserSubscriptionsField;
            }
            set
            {
                this.UserSubscriptionsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSubscription", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    public partial class UserSubscription : object
    {
        
        private System.Guid SubscriptionIdField;
        
        private int UserIdField;
        
        private System.Guid UserSubscriptionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubscriptionId
        {
            get
            {
                return this.SubscriptionIdField;
            }
            set
            {
                this.SubscriptionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserSubscriptionId
        {
            get
            {
                return this.UserSubscriptionIdField;
            }
            set
            {
                this.UserSubscriptionIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subscription", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    public partial class Subscription : object
    {
        
        private int CallMinutesField;
        
        private string NameField;
        
        private decimal PriceField;
        
        private decimal PriceIncVatAmountField;
        
        private System.Guid SubscriptionIdField;
        
        private System.Collections.Generic.List<UserServiceReference.UserSubscription> UserSubscriptionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallMinutes
        {
            get
            {
                return this.CallMinutesField;
            }
            set
            {
                this.CallMinutesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceIncVatAmount
        {
            get
            {
                return this.PriceIncVatAmountField;
            }
            set
            {
                this.PriceIncVatAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubscriptionId
        {
            get
            {
                return this.SubscriptionIdField;
            }
            set
            {
                this.SubscriptionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<UserServiceReference.UserSubscription> UserSubscriptions
        {
            get
            {
                return this.UserSubscriptionsField;
            }
            set
            {
                this.UserSubscriptionsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost:11012/services/user", ConfigurationName="UserServiceReference.IUserService")]
    public interface IUserService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:11012/services/user/IUserService/Add", ReplyAction="http://localhost:11012/services/user/IUserService/AddResponse")]
        System.Threading.Tasks.Task<UserServiceReference.User> AddAsync(UserServiceReference.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:11012/services/user/IUserService/AddSubscription", ReplyAction="http://localhost:11012/services/user/IUserService/AddSubscriptionResponse")]
        System.Threading.Tasks.Task<bool> AddSubscriptionAsync(string id, string subscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:11012/services/user/IUserService/Delete", ReplyAction="http://localhost:11012/services/user/IUserService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:11012/services/user/IUserService/Get", ReplyAction="http://localhost:11012/services/user/IUserService/GetResponse")]
        System.Threading.Tasks.Task<UserServiceReference.User> GetAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:11012/services/user/IUserService/GetAll", ReplyAction="http://localhost:11012/services/user/IUserService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UserServiceReference.User>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:11012/services/user/IUserService/Update", ReplyAction="http://localhost:11012/services/user/IUserService/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(string id, UserServiceReference.User entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:11012/services/user/IUserService/GetSubscriptions", ReplyAction="http://localhost:11012/services/user/IUserService/GetSubscriptionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UserServiceReference.Subscription>> GetSubscriptionsAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IUserServiceChannel : UserServiceReference.IUserService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<UserServiceReference.IUserService>, UserServiceReference.IUserService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public UserServiceClient() : 
                base(UserServiceClient.GetDefaultBinding(), UserServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IUserService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(UserServiceClient.GetBindingForEndpoint(endpointConfiguration), UserServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(UserServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(UserServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<UserServiceReference.User> AddAsync(UserServiceReference.User entity)
        {
            return base.Channel.AddAsync(entity);
        }
        
        public System.Threading.Tasks.Task<bool> AddSubscriptionAsync(string id, string subscriptionId)
        {
            return base.Channel.AddSubscriptionAsync(id, subscriptionId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string id)
        {
            return base.Channel.DeleteAsync(id);
        }
        
        public System.Threading.Tasks.Task<UserServiceReference.User> GetAsync(string id)
        {
            return base.Channel.GetAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UserServiceReference.User>> GetAllAsync()
        {
            return base.Channel.GetAllAsync();
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(string id, UserServiceReference.User entity)
        {
            return base.Channel.UpdateAsync(id, entity);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UserServiceReference.Subscription>> GetSubscriptionsAsync(int id)
        {
            return base.Channel.GetSubscriptionsAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUserService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUserService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:11012/Services/UserService.svc/User.Svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return UserServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IUserService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return UserServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IUserService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IUserService,
        }
    }
}
